# Generated by Django 5.2 on 2025-06-04 20:48

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('esp_id', models.CharField(max_length=100, unique=True)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('serigne', 'Serigne Daara'), ('ndeye', 'Ndèye Daara'), ('parent', 'Parent')], max_length=10)),
                ('téléphone', models.CharField(max_length=20, null=True)),
                ('email', models.EmailField(max_length=254, null=True, verbose_name='Adresse éléctronique')),
                ('first_name', models.CharField(max_length=100, null=True, verbose_name='Prénom')),
                ('last_name', models.CharField(max_length=100, null=True, verbose_name='Nom')),
                ('nom_daara', models.CharField(max_length=100, null=True, verbose_name='Nom de votre Daara')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='DeviceToken',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(editable=False, max_length=64, unique=True)),
                ('esp', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='token', to='trackingtalibe.device')),
            ],
        ),
        migrations.CreateModel(
            name='Enfant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100)),
                ('prenom', models.CharField(max_length=100)),
                ('date_naissance', models.DateField()),
                ('id_esp32', models.CharField(max_length=100, unique=True, verbose_name="Id de l'appareil")),
                ('provenance', models.CharField(max_length=100, null=True)),
                ('appareil', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='trackingtalibe.device')),
                ('parents', models.ManyToManyField(blank=True, related_name='enfants_parents', to=settings.AUTH_USER_MODEL)),
                ('parrains', models.ManyToManyField(blank=True, related_name='enfants_parrains', to=settings.AUTH_USER_MODEL)),
                ('responsable', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enfants', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DemandeAssociation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('statut', models.CharField(choices=[('en_attente', 'En attente'), ('accepte', 'Acceptée'), ('refuse', 'Refusée')], default='en_attente', max_length=20)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('utilisateur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('enfant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trackingtalibe.enfant')),
            ],
        ),
    ]
